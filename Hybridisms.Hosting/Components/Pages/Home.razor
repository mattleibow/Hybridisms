@page "/"

@using Hybridisms.Shared.Services
@* // TODO: UI - [A] Static page with SSR *@
@attribute [StreamRendering]

@inject INotesService NotesService

<PageTitle>Starred Notes</PageTitle>

<script src="@Assets["_content/Hybridisms.Hosting/components/notes.js"]"></script>

<h1>Starred Notes</h1>

<p><em>Render Mode: @RendererInfo.Name</em></p>

<p>All the notes you have starred.</p>

@if (notes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button class="btn btn-primary" onclick="refreshNotesTable()">Refresh</button>

    <table class="table" id="notesTable">
        <thead>
            <tr>
                <th>Title</th>
                <th>Content</th>
                <th>Created</th>
                <th>Modified</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var note in notes)
            {
                <tr>
                    <td>@note.Title</td>
                    <td>@note.Content</td>
                    <td>@note.Created.ToLocalTime().ToString("g")</td>
                    <td>@note.Modified.ToLocalTime().ToString("g")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ICollection<Note>? notes;

    protected override async Task OnInitializedAsync()
    {
        // Simulate a delay to show loading state
        await Task.Delay(3000);

        notes = await NotesService.GetStarredNotesAsync();
    }
}
