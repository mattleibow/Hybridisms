@using Hybridisms.Client.Shared.Services

@inject INotesService NotesService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Hybridisms</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Starred Notes
            </NavLink>
        </div>

        <hr />

        @if (notebooks is null)
        {
            <div class="nav-item px-3">
                <span class="nav-link disabled">Loading notebooks...</span>
            </div>
        }
        else
        {
            @foreach (var notebook in notebooks)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href=@($"notebook/{notebook.Id}/notes")>
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> @notebook.Title
                    </NavLink>
                </div>
            }
        }

        <hr />

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/notebook/new" Match="NavLinkMatch.All">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> New Notebook
            </NavLink>
        </div>

    </nav>
</div>

@code {
    private ICollection<Notebook>? notebooks;

    protected override async Task OnInitializedAsync()
    {
        notebooks = await NotesService.GetNotebooksAsync();
    }
}
